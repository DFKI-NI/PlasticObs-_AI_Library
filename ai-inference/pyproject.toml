[tool]
[tool.poetry]
name = "ai-inference"
version = "0.1.0"
homepage = "https://github.com/ridoo/ai-inference"
description = "REST API to trigger AI-Inferences."
authors = [
    "Henning Bredel <h.bredel@52north.org>",
    "Felix Becker <felix.becker@dfki.de>"
]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
packages = [
    { include = "ai_inference" },
    { include = "tests", format = "sdist" },
]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
click = "8.0.1"

albumentations = "^1.4.14"
black  = { version = "^21.5b2", optional = true}
bump2version = {version = "^1.0.1", optional = true}
fastapi = {extras = ["standard"], version = "^0.112.2"}
flake8  = { version = "^3.9.2", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }
isort  = { version = "^5.8.0", optional = true}
matplotlib = "^3.9.2"
mkdocs  = { version = "^1.1.2", optional = true}
mkdocs-autorefs = {version = "^0.2.1", optional = true}
mkdocs-include-markdown-plugin  = { version = "^1.0.0", optional = true}
mkdocs-material  = { version = "^6.1.7", optional = true}
mkdocs-material-extensions  = { version = "^1.0.1", optional = true}
mkdocstrings  = { version = "^0.15.2", optional = true}
mypy = {version = "^0.900", optional = true}
patchify = "^0.2.3"
pillow = "^10.4.0"
pip  = { version = "^20.3.1", optional = true}
pre-commit = {version = "^2.12.0", optional = true}
pytest  = { version = "^6.2.4", optional = true}
pytest-cov  = { version = "^2.12.0", optional = true}
rasterio = "^1.3.10"
requests = "^2.32.3"
toml = {version = "^0.10.2", optional = true}
tox  = { version = "^3.20.1", optional = true}
twine  = { version = "^3.3.0", optional = true}
virtualenv  = { version = "^20.2.2", optional = true}
reorder-python-imports = "^3.13.0"
loguru = "^0.7.2"
scikit-learn = "^1.5.1"
numpy = ">=1,<2"
geopandas = "^1.0.1"
ultralytics = "^8.3.127"

[tool.poetry.extras]
test = [
    "black",
    "mypy",
    "flake8",
    "flake8-docstrings",
    ]

dev = ["pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

[tool.poetry.scripts]
app = 'ai_inference.main:main'

[[tool.poetry.source]]
name = "pytorch_cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.poetry.group.pytorch]
# recommend manual installation
optional = true

[tool.poetry.group.pytorch.dependencies]
torch = "^2.4.1"
torchvision = "^0.19.1"


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
